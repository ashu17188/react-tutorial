[{"/home/administrator/Work/React_Projects/react-tutorial/src/index.js":"1","/home/administrator/Work/React_Projects/react-tutorial/src/reportWebVitals.js":"2","/home/administrator/Work/React_Projects/react-tutorial/src/App.tsx":"3","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Signup.tsx":"4","/home/administrator/Work/React_Projects/react-tutorial/src/Components/ForgotPassword.tsx":"5","/home/administrator/Work/React_Projects/react-tutorial/src/Components/PrivateRoute.tsx":"6","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Login.tsx":"7","/home/administrator/Work/React_Projects/react-tutorial/src/Components/UpdateProfile.tsx":"8","/home/administrator/Work/React_Projects/react-tutorial/src/contexts/AuthContext.tsx":"9","/home/administrator/Work/React_Projects/react-tutorial/src/firebase.tsx":"10","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Dashboard/Dashboard.tsx":"11","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Dashboard/UserService.tsx":"12","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Calculator/CalculatorMain.tsx":"13","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Calculator/Button/OperationButton.tsx":"14","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Calculator/Button/DigitButton.tsx":"15","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Counter/CounterMain.tsx":"16"},{"size":547,"mtime":1625940373455,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1623581658018,"results":"19","hashOfConfig":"18"},{"size":1169,"mtime":1638090499967,"results":"20","hashOfConfig":"18"},{"size":2057,"mtime":1625936656055,"results":"21","hashOfConfig":"18"},{"size":1683,"mtime":1625936296159,"results":"22","hashOfConfig":"18"},{"size":469,"mtime":1630402241772,"results":"23","hashOfConfig":"18"},{"size":1778,"mtime":1625936326995,"results":"24","hashOfConfig":"18"},{"size":2641,"mtime":1625936675899,"results":"25","hashOfConfig":"18"},{"size":1540,"mtime":1625939555943,"results":"26","hashOfConfig":"18"},{"size":817,"mtime":1623496635336,"results":"27","hashOfConfig":"18"},{"size":2345,"mtime":1638203502823,"results":"28","hashOfConfig":"18"},{"size":576,"mtime":1630484391779,"results":"29","hashOfConfig":"18"},{"size":5945,"mtime":1638098091283,"results":"30","hashOfConfig":"18"},{"size":461,"mtime":1638093671143,"results":"31","hashOfConfig":"18"},{"size":411,"mtime":1638092568019,"results":"32","hashOfConfig":"18"},{"size":1011,"mtime":1638022532226,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1lgqbaj",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/administrator/Work/React_Projects/react-tutorial/src/index.js",[],["70","71"],"/home/administrator/Work/React_Projects/react-tutorial/src/reportWebVitals.js",[],"/home/administrator/Work/React_Projects/react-tutorial/src/App.tsx",[],["72","73"],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/Signup.tsx",[],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/ForgotPassword.tsx",[],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/PrivateRoute.tsx",[],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/Login.tsx",[],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/UpdateProfile.tsx",[],"/home/administrator/Work/React_Projects/react-tutorial/src/contexts/AuthContext.tsx",[],"/home/administrator/Work/React_Projects/react-tutorial/src/firebase.tsx",[],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/Dashboard/Dashboard.tsx",["74","75"],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/Dashboard/UserService.tsx",["76"],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/Calculator/CalculatorMain.tsx",["77"],"import React, { useReducer } from \"react\";\nimport OperationButton from \"./Button/OperationButton\";\nimport DigitButton from \"./Button/DigitButton\";\nimport \"./CalculatorMain.scss\";\nexport enum ACTIONS {\n  ADD_DIGIT,\n  CHOOSE_OPERATION,\n  CLEAR,\n  DELETE_DIGIT,\n  EVALUATE,\n}\n\ninterface State {\n  currentOperand: any;\n  previousOperand: any;\n  operation: any;\n  overwrite?: boolean;\n}\n\nexport interface Action {\n  type: ACTIONS;\n  payload?: any;\n}\n\nconst reducer = (state: State = INITIAL_STATE, action: Action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      if (state.overwrite) {\n        return {\n          ...state,\n          currentOperand: action.payload.digit,\n          overwrite: false,\n        };\n      }\n      if (payload.digit === \"0\" && state.currentOperand === \"0\") {\n        return state;\n      }\n      if (payload.digit === \".\" && state.currentOperand === null) {\n        return {\n          ...state,\n          currentOperand: `0.`,\n        };\n      }\n      if (payload.digit === \".\" && state.currentOperand?.includes(\".\")) {\n        return state;\n      }\n      return {\n        ...state,\n        currentOperand: `${state.currentOperand || \"\"}${payload.digit}`,\n      };\n\n    case ACTIONS.CLEAR:\n      return {} as State;\n\n    case ACTIONS.DELETE_DIGIT:\n      if (state.overwrite) {\n        return {\n          ...state,\n          overwrite: false,\n          currentOperand: null,\n        };\n      }\n      if (state.overwrite === false) return { ...state };\n\n      if (state.currentOperand?.length === 1) {\n        return { ...state, currentOperand: null };\n      }\n      return {\n        ...state,\n        currentOperand: state.currentOperand?.slice(0, -1),\n      };\n\n    case ACTIONS.EVALUATE:\n      if (\n        state.operation == null ||\n        state.currentOperand == null ||\n        state.previousOperand == null\n      ) {\n        return state;\n      }\n      return {\n        ...state,\n        overwrite: true,\n        previousOperand: null,\n        operation: null,\n        currentOperand: evaluate(state),\n      };\n\n    case ACTIONS.CHOOSE_OPERATION:\n      if (state.currentOperand == null && state.previousOperand == null) {\n        return state;\n      }\n      if (state.currentOperand == null) {\n        return {\n          ...state,\n          operation: action.payload.operation,\n        };\n      }\n      if (state.previousOperand == null) {\n        return {\n          ...state,\n          operation: payload.operation,\n          previousOperand: state.currentOperand,\n          currentOperand: null,\n        };\n      }\n      return {\n        ...state,\n        previousOperand: evaluate(state),\n        operation: payload.operation,\n        currentOperand: null,\n      };\n    default:\n      return state;\n  }\n  return state;\n};\n\nconst evaluate = (state: State) => {\n  const prev = parseFloat(state.previousOperand || \"\");\n  const current = parseFloat(state.currentOperand || \"\");\n  if (isNaN(prev) || isNaN(current)) return \"\";\n  let computation = 0;\n\n  switch (state.operation) {\n    case \"+\":\n      computation = prev + current;\n      computation = parseFloat(computation.toFixed(2));\n      break;\n\n    case \"-\":\n      computation = prev - current;\n      computation = parseFloat(computation.toFixed(2));\n      break;\n    case \"*\":\n      computation = prev * current;\n      computation = parseFloat(computation.toFixed(2));\n      break;\n    case \"รท\":\n      computation = prev / current;\n      computation = parseFloat(computation.toFixed(2));\n      break;\n  }\n  return computation.toString();\n};\n\nconst INTEGER_FORMATTER = new Intl.NumberFormat(\"en-US\", {\n  minimumFractionDigits: 0,\n});\n\nconst formatOperand = (operand: any) => {\n  if (operand == null) return;\n  const [integer, decimal] = operand.split(\".\");\n\n  if (decimal == null) {\n    return INTEGER_FORMATTER.format(parseInt(integer));\n  }\n  return `${INTEGER_FORMATTER.format(parseInt(integer))}.${decimal}`;\n};\nconst INITIAL_STATE: State = {\n  currentOperand: null,\n  previousOperand: null,\n  operation: \"\",\n};\nconst CalculatorMain = () => {\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE);\n\n  return (\n    <div className=\"calculator-grid\">\n      <div className=\"output\">\n        <div className=\"previous-operand\">\n          {formatOperand(state.previousOperand)}\n          {state.operation}\n        </div>\n        <div className=\"current-operand\">\n          {formatOperand(state.currentOperand)}\n        </div>\n      </div>\n      <button\n        className=\"span-two\"\n        onClick={() => dispatch({ type: ACTIONS.CLEAR })}\n      >\n        AC\n      </button>\n      <button\n        className=\"button\"\n        onClick={() => dispatch({ type: ACTIONS.DELETE_DIGIT })}\n      >\n        DEL\n      </button>\n      <OperationButton dispatch={dispatch} operation=\"รท\"></OperationButton>\n      <DigitButton dispatch={dispatch} digit=\"1\"></DigitButton>\n      <DigitButton digit=\"2\" dispatch={dispatch}></DigitButton>\n      <DigitButton digit=\"3\" dispatch={dispatch}></DigitButton>\n      <OperationButton operation=\"*\" dispatch={dispatch}></OperationButton>\n      <DigitButton digit=\"4\" dispatch={dispatch}></DigitButton>\n      <DigitButton digit=\"5\" dispatch={dispatch}></DigitButton>\n      <DigitButton digit=\"6\" dispatch={dispatch}></DigitButton>\n      <OperationButton operation=\"+\" dispatch={dispatch}></OperationButton>\n      <DigitButton digit=\"7\" dispatch={dispatch}></DigitButton>\n      <DigitButton digit=\"8\" dispatch={dispatch}></DigitButton>\n      <DigitButton digit=\"9\" dispatch={dispatch}></DigitButton>\n      <OperationButton operation=\"-\" dispatch={dispatch}></OperationButton>\n      <DigitButton digit=\".\" dispatch={dispatch}></DigitButton>\n      <DigitButton digit=\"0\" dispatch={dispatch}></DigitButton>\n      <button\n        className=\"span-two\"\n        onClick={() => dispatch({ type: ACTIONS.EVALUATE })}\n      >\n        =\n      </button>\n    </div>\n  );\n};\n\nexport default CalculatorMain;\n","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Calculator/Button/OperationButton.tsx",["78"],"import React, { ReducerAction } from \"react\";\nimport { Action, ACTIONS } from \"../CalculatorMain\";\n\nfunction OperationButton(props: {\n  dispatch: React.Dispatch<Action>;\n  operation: String;\n}) {\n  return (\n    <button\n      onClick={() =>\n        props.dispatch({\n          type: ACTIONS.CHOOSE_OPERATION,\n          payload: { operation: props.operation },\n        })\n      }\n    >\n      {props.operation}\n    </button>\n  );\n}\n\nexport default OperationButton;\n","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Calculator/Button/DigitButton.tsx",[],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/Counter/CounterMain.tsx",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":5,"column":10,"nodeType":"85","messageId":"86","endLine":5,"endColumn":21},{"ruleId":"83","severity":1,"message":"87","line":6,"column":10,"nodeType":"85","messageId":"86","endLine":6,"endColumn":14},{"ruleId":"88","severity":1,"message":"89","line":15,"column":6,"nodeType":"90","endLine":15,"endColumn":14,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":117,"column":3,"nodeType":"94","messageId":"95","endLine":117,"endColumn":16},{"ruleId":"83","severity":1,"message":"96","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":30},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"@typescript-eslint/no-unused-vars","'UserService' is defined but never used.","Identifier","unusedVar","'User' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.","ArrayExpression",["99"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'ReducerAction' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},"Update the dependencies array to be: [fetchUser, userId]",{"range":"102","text":"103"},[441,449],"[fetchUser, userId]"]