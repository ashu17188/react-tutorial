[{"/home/administrator/Work/React_Projects/react-tutorial/src/index.js":"1","/home/administrator/Work/React_Projects/react-tutorial/src/reportWebVitals.js":"2","/home/administrator/Work/React_Projects/react-tutorial/src/App.tsx":"3","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Signup.tsx":"4","/home/administrator/Work/React_Projects/react-tutorial/src/Components/ForgotPassword.tsx":"5","/home/administrator/Work/React_Projects/react-tutorial/src/Components/PrivateRoute.tsx":"6","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Login.tsx":"7","/home/administrator/Work/React_Projects/react-tutorial/src/Components/UpdateProfile.tsx":"8","/home/administrator/Work/React_Projects/react-tutorial/src/contexts/AuthContext.tsx":"9","/home/administrator/Work/React_Projects/react-tutorial/src/firebase.tsx":"10","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Dashboard/Dashboard.tsx":"11","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Dashboard/UserService.tsx":"12","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Calculator/CalculatorMain.tsx":"13","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Calculator/Button/OperationButton.tsx":"14","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Calculator/Button/DigitButton.tsx":"15","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Counter/CounterMain.tsx":"16","/home/administrator/Work/React_Projects/react-tutorial/src/Components/header/HeaderMain.tsx":"17","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Reset_form_with_default_values_and_clear_errors/ResetFormMain.tsx":"18","/home/administrator/Work/React_Projects/react-tutorial/src/Components/StudentInfo/StudentInfoMain.tsx":"19"},{"size":547,"mtime":1638293902392,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1623581658018,"results":"22","hashOfConfig":"21"},{"size":1127,"mtime":1638295747340,"results":"23","hashOfConfig":"21"},{"size":2057,"mtime":1625936656055,"results":"24","hashOfConfig":"21"},{"size":1683,"mtime":1625936296159,"results":"25","hashOfConfig":"21"},{"size":469,"mtime":1630402241772,"results":"26","hashOfConfig":"21"},{"size":1778,"mtime":1638295195572,"results":"27","hashOfConfig":"21"},{"size":2641,"mtime":1625936675899,"results":"28","hashOfConfig":"21"},{"size":1540,"mtime":1625939555943,"results":"29","hashOfConfig":"21"},{"size":817,"mtime":1623496635336,"results":"30","hashOfConfig":"21"},{"size":2786,"mtime":1638510593871,"results":"31","hashOfConfig":"21"},{"size":576,"mtime":1630484391779,"results":"32","hashOfConfig":"21"},{"size":5945,"mtime":1638098091283,"results":"33","hashOfConfig":"21"},{"size":461,"mtime":1638093671143,"results":"34","hashOfConfig":"21"},{"size":411,"mtime":1638092568019,"results":"35","hashOfConfig":"21"},{"size":1011,"mtime":1638022532226,"results":"36","hashOfConfig":"21"},{"size":353,"mtime":1638295988684,"results":"37","hashOfConfig":"21"},{"size":3728,"mtime":1638446253908,"results":"38","hashOfConfig":"21"},{"size":6339,"mtime":1638514320238,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1lgqbaj",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/administrator/Work/React_Projects/react-tutorial/src/index.js",[],["87","88"],"/home/administrator/Work/React_Projects/react-tutorial/src/reportWebVitals.js",[],"/home/administrator/Work/React_Projects/react-tutorial/src/App.tsx",[],["89","90"],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/Signup.tsx",[],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/ForgotPassword.tsx",[],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/PrivateRoute.tsx",[],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/Login.tsx",[],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/UpdateProfile.tsx",[],"/home/administrator/Work/React_Projects/react-tutorial/src/contexts/AuthContext.tsx",[],"/home/administrator/Work/React_Projects/react-tutorial/src/firebase.tsx",[],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/Dashboard/Dashboard.tsx",["91","92","93","94"],"import React, { useEffect, useState } from \"react\";\nimport { Card, Button, Alert, ListGroup, Row, Col } from \"react-bootstrap\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { UserService } from \"./UserService\";\nimport { User } from \"./Model/User\";\nimport axios from \"axios\";\nimport HeaderMain from \"../header/HeaderMain\";\nimport ResetFormMain from \"../Reset_form_with_default_values_and_clear_errors/ResetFormMain\";\nimport StudentInfoMain from \"../StudentInfo/StudentInfoMain\";\n\nexport default function Dashboard() {\n  const [error, setError] = useState(\"\");\n  const { currentUser, logout } = useAuth();\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  async function handleLogout() {\n    setError(\"\");\n\n    try {\n      await logout();\n      history.push(\"/login\");\n    } catch {\n      setError(\"Failed to log out\");\n    }\n  }\n\n  const [user, setUser] = useState({ name: \"\", email: \"\" });\n  useEffect(() => {\n    loadUesrById(1);\n  }, []);\n\n  const loadUesrById = async (id: number) => {\n    try {\n      setLoading(true);\n      const res = await axios.get(\n        `https://jsonplaceholder.typicode.com/users/${id}`\n      );\n      setUser({ name: res.data.name, email: res.data.email });\n      setLoading(false);\n    } catch (e) {\n      setLoading(false);\n    }\n  };\n  return (\n    <>\n      <HeaderMain />\n      <Row>\n        <Col md={4}>\n          <Card>\n            <Card.Body>\n              <h2 className=\"text-center mb-4\">Profile</h2>\n              {error && <Alert variant=\"danger\">{error}</Alert>}\n              <strong>Email:</strong> {currentUser.email}\n              <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">\n                Update Profile\n              </Link>\n              <div className=\"w-100 text-center mt-2\">\n                <Button variant=\"link\" onClick={handleLogout}>\n                  Log Out\n                </Button>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={8}>\n          <Card>\n            <Card.Body>\n              <Alert variant=\"primary\">\n                {user.name},{user.email}\n              </Alert>\n              <h2>User's List</h2>\n              <ListGroup>\n                <ListGroup.Item>Cras justo odio</ListGroup.Item>\n                <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\n                <ListGroup.Item>Morbi leo risus</ListGroup.Item>\n                <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\n                <ListGroup.Item>Vestibulum at eros</ListGroup.Item>\n              </ListGroup>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <StudentInfoMain />\n      </Row>\n    </>\n  );\n}\n","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Dashboard/UserService.tsx",["95"],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/Calculator/CalculatorMain.tsx",["96"],"import React, { useReducer } from \"react\";\nimport OperationButton from \"./Button/OperationButton\";\nimport DigitButton from \"./Button/DigitButton\";\nimport \"./CalculatorMain.scss\";\nexport enum ACTIONS {\n  ADD_DIGIT,\n  CHOOSE_OPERATION,\n  CLEAR,\n  DELETE_DIGIT,\n  EVALUATE,\n}\n\ninterface State {\n  currentOperand: any;\n  previousOperand: any;\n  operation: any;\n  overwrite?: boolean;\n}\n\nexport interface Action {\n  type: ACTIONS;\n  payload?: any;\n}\n\nconst reducer = (state: State = INITIAL_STATE, action: Action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      if (state.overwrite) {\n        return {\n          ...state,\n          currentOperand: action.payload.digit,\n          overwrite: false,\n        };\n      }\n      if (payload.digit === \"0\" && state.currentOperand === \"0\") {\n        return state;\n      }\n      if (payload.digit === \".\" && state.currentOperand === null) {\n        return {\n          ...state,\n          currentOperand: `0.`,\n        };\n      }\n      if (payload.digit === \".\" && state.currentOperand?.includes(\".\")) {\n        return state;\n      }\n      return {\n        ...state,\n        currentOperand: `${state.currentOperand || \"\"}${payload.digit}`,\n      };\n\n    case ACTIONS.CLEAR:\n      return {} as State;\n\n    case ACTIONS.DELETE_DIGIT:\n      if (state.overwrite) {\n        return {\n          ...state,\n          overwrite: false,\n          currentOperand: null,\n        };\n      }\n      if (state.overwrite === false) return { ...state };\n\n      if (state.currentOperand?.length === 1) {\n        return { ...state, currentOperand: null };\n      }\n      return {\n        ...state,\n        currentOperand: state.currentOperand?.slice(0, -1),\n      };\n\n    case ACTIONS.EVALUATE:\n      if (\n        state.operation == null ||\n        state.currentOperand == null ||\n        state.previousOperand == null\n      ) {\n        return state;\n      }\n      return {\n        ...state,\n        overwrite: true,\n        previousOperand: null,\n        operation: null,\n        currentOperand: evaluate(state),\n      };\n\n    case ACTIONS.CHOOSE_OPERATION:\n      if (state.currentOperand == null && state.previousOperand == null) {\n        return state;\n      }\n      if (state.currentOperand == null) {\n        return {\n          ...state,\n          operation: action.payload.operation,\n        };\n      }\n      if (state.previousOperand == null) {\n        return {\n          ...state,\n          operation: payload.operation,\n          previousOperand: state.currentOperand,\n          currentOperand: null,\n        };\n      }\n      return {\n        ...state,\n        previousOperand: evaluate(state),\n        operation: payload.operation,\n        currentOperand: null,\n      };\n    default:\n      return state;\n  }\n  return state;\n};\n\nconst evaluate = (state: State) => {\n  const prev = parseFloat(state.previousOperand || \"\");\n  const current = parseFloat(state.currentOperand || \"\");\n  if (isNaN(prev) || isNaN(current)) return \"\";\n  let computation = 0;\n\n  switch (state.operation) {\n    case \"+\":\n      computation = prev + current;\n      computation = parseFloat(computation.toFixed(2));\n      break;\n\n    case \"-\":\n      computation = prev - current;\n      computation = parseFloat(computation.toFixed(2));\n      break;\n    case \"*\":\n      computation = prev * current;\n      computation = parseFloat(computation.toFixed(2));\n      break;\n    case \"÷\":\n      computation = prev / current;\n      computation = parseFloat(computation.toFixed(2));\n      break;\n  }\n  return computation.toString();\n};\n\nconst INTEGER_FORMATTER = new Intl.NumberFormat(\"en-US\", {\n  minimumFractionDigits: 0,\n});\n\nconst formatOperand = (operand: any) => {\n  if (operand == null) return;\n  const [integer, decimal] = operand.split(\".\");\n\n  if (decimal == null) {\n    return INTEGER_FORMATTER.format(parseInt(integer));\n  }\n  return `${INTEGER_FORMATTER.format(parseInt(integer))}.${decimal}`;\n};\nconst INITIAL_STATE: State = {\n  currentOperand: null,\n  previousOperand: null,\n  operation: \"\",\n};\nconst CalculatorMain = () => {\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE);\n\n  return (\n    <div className=\"calculator-grid\">\n      <div className=\"output\">\n        <div className=\"previous-operand\">\n          {formatOperand(state.previousOperand)}\n          {state.operation}\n        </div>\n        <div className=\"current-operand\">\n          {formatOperand(state.currentOperand)}\n        </div>\n      </div>\n      <button\n        className=\"span-two\"\n        onClick={() => dispatch({ type: ACTIONS.CLEAR })}\n      >\n        AC\n      </button>\n      <button\n        className=\"button\"\n        onClick={() => dispatch({ type: ACTIONS.DELETE_DIGIT })}\n      >\n        DEL\n      </button>\n      <OperationButton dispatch={dispatch} operation=\"÷\"></OperationButton>\n      <DigitButton dispatch={dispatch} digit=\"1\"></DigitButton>\n      <DigitButton digit=\"2\" dispatch={dispatch}></DigitButton>\n      <DigitButton digit=\"3\" dispatch={dispatch}></DigitButton>\n      <OperationButton operation=\"*\" dispatch={dispatch}></OperationButton>\n      <DigitButton digit=\"4\" dispatch={dispatch}></DigitButton>\n      <DigitButton digit=\"5\" dispatch={dispatch}></DigitButton>\n      <DigitButton digit=\"6\" dispatch={dispatch}></DigitButton>\n      <OperationButton operation=\"+\" dispatch={dispatch}></OperationButton>\n      <DigitButton digit=\"7\" dispatch={dispatch}></DigitButton>\n      <DigitButton digit=\"8\" dispatch={dispatch}></DigitButton>\n      <DigitButton digit=\"9\" dispatch={dispatch}></DigitButton>\n      <OperationButton operation=\"-\" dispatch={dispatch}></OperationButton>\n      <DigitButton digit=\".\" dispatch={dispatch}></DigitButton>\n      <DigitButton digit=\"0\" dispatch={dispatch}></DigitButton>\n      <button\n        className=\"span-two\"\n        onClick={() => dispatch({ type: ACTIONS.EVALUATE })}\n      >\n        =\n      </button>\n    </div>\n  );\n};\n\nexport default CalculatorMain;\n",["97","98"],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/Calculator/Button/OperationButton.tsx",["99"],"import React, { ReducerAction } from \"react\";\nimport { Action, ACTIONS } from \"../CalculatorMain\";\n\nfunction OperationButton(props: {\n  dispatch: React.Dispatch<Action>;\n  operation: String;\n}) {\n  return (\n    <button\n      onClick={() =>\n        props.dispatch({\n          type: ACTIONS.CHOOSE_OPERATION,\n          payload: { operation: props.operation },\n        })\n      }\n    >\n      {props.operation}\n    </button>\n  );\n}\n\nexport default OperationButton;\n","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Calculator/Button/DigitButton.tsx",[],["100","101"],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/Counter/CounterMain.tsx",[],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/header/HeaderMain.tsx",[],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/Reset_form_with_default_values_and_clear_errors/ResetFormMain.tsx",["102"],"import React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\";\n\n//Reference: https://jasonwatmore.com/post/2021/09/23/react-hook-form-reset-form-with-default-values-and-clear-errors\n\nconst ResetFormMain = () => {\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required(\"Title is required\"),\n    firstName: Yup.string().required(\"First name is required.\"),\n    lastName: Yup.string().required(\"Last name is required\"),\n  });\n  const formOptions = { resolver: yupResolver(validationSchema) };\n  const { register, handleSubmit, reset, formState } = useForm(formOptions);\n  const { errors } = formState;\n  const [user, setUser] = useState({ title: \"\", firstName: \"\", lastName: \"\" });\n\n  useEffect(() => {\n    setTimeout(\n      () => setUser({ title: \"Mr.\", firstName: \"John\", lastName: \"James\" }),\n      1000\n    );\n  }, []);\n\n  useEffect(() => {\n    reset(user);\n  }, [user]);\n\n  const onSubmit = (data: any) => {\n    alert(\"Success\" + JSON.stringify(data, null, 4));\n  };\n  return (\n    <>\n      <div className=\"card m-3\">\n        <h5 className=\"card-header\">\n          React Hook Form - Reset Form with Default Values Example\n        </h5>\n        <div className=\"card-body\">\n          {user && (\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"form-row\">\n                <div className=\"form-group col\">\n                  <label htmlFor=\"\">Title</label>\n                  <select\n                    id=\"\"\n                    {...register(\"title\")}\n                    className={`form-control ${\n                      errors.title ? \"is-invalid\" : \"\"\n                    }`}\n                  >\n                    <option value=\"\"></option>\n                    <option value=\"Mr\">Mr</option>\n                    <option value=\"Mrs\">Mrs</option>\n                    <option value=\"Miss\">Miss</option>\n                    <option value=\"Ms\">Ms</option>\n                  </select>\n                  <div className=\"invalid-feedback\">\n                    {errors.title?.message}\n                  </div>\n                </div>\n                <div className=\"form-group col-5\">\n                  <label>First Name</label>\n                  <input\n                    type=\"text\"\n                    {...register(\"firstName\")}\n                    className={`form-control ${\n                      errors.firstName ? \"is-invalid\" : \"\"\n                    }`}\n                  />\n                  <div className=\"invalid-feedback\">\n                    {errors.firstName?.message}\n                  </div>\n                </div>\n                <div className=\"form-group col-5\">\n                  <label>Last Name</label>\n                  <input\n                    type=\"text\"\n                    {...register(\"lastName\")}\n                    className={`form-control ${\n                      errors.lastName ? \"is-invalid\" : \"\"\n                    }`}\n                  />\n                  <div className=\"invalid-feedback\">\n                    {errors.lastName?.message}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <button type=\"submit\" className=\"btn btn-primary mr-1\">\n                  Submit\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => reset()}\n                  className=\"btn btn-secondary\"\n                >\n                  Reset\n                </button>\n              </div>\n            </form>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ResetFormMain;\n",["103","104"],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/StudentInfo/StudentInfoMain.tsx",["105","106"],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":5,"column":10,"nodeType":"113","messageId":"114","endLine":5,"endColumn":21},{"ruleId":"111","severity":1,"message":"115","line":6,"column":10,"nodeType":"113","messageId":"114","endLine":6,"endColumn":14},{"ruleId":"111","severity":1,"message":"116","line":9,"column":8,"nodeType":"113","messageId":"114","endLine":9,"endColumn":21},{"ruleId":"111","severity":1,"message":"117","line":16,"column":10,"nodeType":"113","messageId":"114","endLine":16,"endColumn":17},{"ruleId":"118","severity":1,"message":"119","line":15,"column":6,"nodeType":"120","endLine":15,"endColumn":14,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":117,"column":3,"nodeType":"124","messageId":"125","endLine":117,"endColumn":16},{"ruleId":"107","replacedBy":"126"},{"ruleId":"109","replacedBy":"127"},{"ruleId":"111","severity":1,"message":"128","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":30},{"ruleId":"107","replacedBy":"129"},{"ruleId":"109","replacedBy":"130"},{"ruleId":"118","severity":1,"message":"131","line":28,"column":6,"nodeType":"120","endLine":28,"endColumn":12,"suggestions":"132"},{"ruleId":"107","replacedBy":"133"},{"ruleId":"109","replacedBy":"134"},{"ruleId":"111","severity":1,"message":"135","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":23},{"ruleId":"111","severity":1,"message":"136","line":29,"column":21,"nodeType":"113","messageId":"114","endLine":29,"endColumn":28},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"@typescript-eslint/no-unused-vars","'UserService' is defined but never used.","Identifier","unusedVar","'User' is defined but never used.","'ResetFormMain' is defined but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.","ArrayExpression",["139"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode",["137"],["138"],"'ReducerAction' is defined but never used.",["137"],["138"],"React Hook useEffect has a missing dependency: 'reset'. Either include it or remove the dependency array.",["140"],["137"],["138"],"'useFieldArray' is defined but never used.","'control' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [fetchUser, userId]",{"range":"145","text":"146"},"Update the dependencies array to be: [reset, user]",{"range":"147","text":"148"},[441,449],"[fetchUser, userId]",[1005,1011],"[reset, user]"]