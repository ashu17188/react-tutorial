[{"/home/administrator/Work/React_Projects/react-tutorial/src/index.js":"1","/home/administrator/Work/React_Projects/react-tutorial/src/reportWebVitals.js":"2","/home/administrator/Work/React_Projects/react-tutorial/src/App.tsx":"3","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Signup.tsx":"4","/home/administrator/Work/React_Projects/react-tutorial/src/Components/ForgotPassword.tsx":"5","/home/administrator/Work/React_Projects/react-tutorial/src/Components/PrivateRoute.tsx":"6","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Login.tsx":"7","/home/administrator/Work/React_Projects/react-tutorial/src/Components/UpdateProfile.tsx":"8","/home/administrator/Work/React_Projects/react-tutorial/src/contexts/AuthContext.tsx":"9","/home/administrator/Work/React_Projects/react-tutorial/src/firebase.tsx":"10","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Dashboard/Dashboard.tsx":"11","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Dashboard/UserService.tsx":"12","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Calculator/CalculatorMain.tsx":"13","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Calculator/Button/OperationButton.tsx":"14","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Calculator/Button/DigitButton.tsx":"15","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Counter/CounterMain.tsx":"16","/home/administrator/Work/React_Projects/react-tutorial/src/Components/header/HeaderMain.tsx":"17","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Reset_form_with_default_values_and_clear_errors/ResetFormMain.tsx":"18"},{"size":547,"mtime":1638293902392,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1623581658018,"results":"21","hashOfConfig":"20"},{"size":1127,"mtime":1638295747340,"results":"22","hashOfConfig":"20"},{"size":2057,"mtime":1625936656055,"results":"23","hashOfConfig":"20"},{"size":1683,"mtime":1625936296159,"results":"24","hashOfConfig":"20"},{"size":469,"mtime":1630402241772,"results":"25","hashOfConfig":"20"},{"size":1778,"mtime":1638295195572,"results":"26","hashOfConfig":"20"},{"size":2641,"mtime":1625936675899,"results":"27","hashOfConfig":"20"},{"size":1540,"mtime":1625939555943,"results":"28","hashOfConfig":"20"},{"size":817,"mtime":1623496635336,"results":"29","hashOfConfig":"20"},{"size":2722,"mtime":1638446322876,"results":"30","hashOfConfig":"20"},{"size":576,"mtime":1630484391779,"results":"31","hashOfConfig":"20"},{"size":5945,"mtime":1638098091283,"results":"32","hashOfConfig":"20"},{"size":461,"mtime":1638093671143,"results":"33","hashOfConfig":"20"},{"size":411,"mtime":1638092568019,"results":"34","hashOfConfig":"20"},{"size":1011,"mtime":1638022532226,"results":"35","hashOfConfig":"20"},{"size":353,"mtime":1638295988684,"results":"36","hashOfConfig":"20"},{"size":3728,"mtime":1638446253908,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1lgqbaj",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"67"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/administrator/Work/React_Projects/react-tutorial/src/index.js",[],["80","81"],"/home/administrator/Work/React_Projects/react-tutorial/src/reportWebVitals.js",[],"/home/administrator/Work/React_Projects/react-tutorial/src/App.tsx",[],["82","83"],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/Signup.tsx",[],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/ForgotPassword.tsx",[],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/PrivateRoute.tsx",[],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/Login.tsx",[],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/UpdateProfile.tsx",[],"/home/administrator/Work/React_Projects/react-tutorial/src/contexts/AuthContext.tsx",[],"/home/administrator/Work/React_Projects/react-tutorial/src/firebase.tsx",[],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/Dashboard/Dashboard.tsx",["84","85","86"],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/Dashboard/UserService.tsx",["87"],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/Calculator/CalculatorMain.tsx",["88"],"import React, { useReducer } from \"react\";\nimport OperationButton from \"./Button/OperationButton\";\nimport DigitButton from \"./Button/DigitButton\";\nimport \"./CalculatorMain.scss\";\nexport enum ACTIONS {\n  ADD_DIGIT,\n  CHOOSE_OPERATION,\n  CLEAR,\n  DELETE_DIGIT,\n  EVALUATE,\n}\n\ninterface State {\n  currentOperand: any;\n  previousOperand: any;\n  operation: any;\n  overwrite?: boolean;\n}\n\nexport interface Action {\n  type: ACTIONS;\n  payload?: any;\n}\n\nconst reducer = (state: State = INITIAL_STATE, action: Action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      if (state.overwrite) {\n        return {\n          ...state,\n          currentOperand: action.payload.digit,\n          overwrite: false,\n        };\n      }\n      if (payload.digit === \"0\" && state.currentOperand === \"0\") {\n        return state;\n      }\n      if (payload.digit === \".\" && state.currentOperand === null) {\n        return {\n          ...state,\n          currentOperand: `0.`,\n        };\n      }\n      if (payload.digit === \".\" && state.currentOperand?.includes(\".\")) {\n        return state;\n      }\n      return {\n        ...state,\n        currentOperand: `${state.currentOperand || \"\"}${payload.digit}`,\n      };\n\n    case ACTIONS.CLEAR:\n      return {} as State;\n\n    case ACTIONS.DELETE_DIGIT:\n      if (state.overwrite) {\n        return {\n          ...state,\n          overwrite: false,\n          currentOperand: null,\n        };\n      }\n      if (state.overwrite === false) return { ...state };\n\n      if (state.currentOperand?.length === 1) {\n        return { ...state, currentOperand: null };\n      }\n      return {\n        ...state,\n        currentOperand: state.currentOperand?.slice(0, -1),\n      };\n\n    case ACTIONS.EVALUATE:\n      if (\n        state.operation == null ||\n        state.currentOperand == null ||\n        state.previousOperand == null\n      ) {\n        return state;\n      }\n      return {\n        ...state,\n        overwrite: true,\n        previousOperand: null,\n        operation: null,\n        currentOperand: evaluate(state),\n      };\n\n    case ACTIONS.CHOOSE_OPERATION:\n      if (state.currentOperand == null && state.previousOperand == null) {\n        return state;\n      }\n      if (state.currentOperand == null) {\n        return {\n          ...state,\n          operation: action.payload.operation,\n        };\n      }\n      if (state.previousOperand == null) {\n        return {\n          ...state,\n          operation: payload.operation,\n          previousOperand: state.currentOperand,\n          currentOperand: null,\n        };\n      }\n      return {\n        ...state,\n        previousOperand: evaluate(state),\n        operation: payload.operation,\n        currentOperand: null,\n      };\n    default:\n      return state;\n  }\n  return state;\n};\n\nconst evaluate = (state: State) => {\n  const prev = parseFloat(state.previousOperand || \"\");\n  const current = parseFloat(state.currentOperand || \"\");\n  if (isNaN(prev) || isNaN(current)) return \"\";\n  let computation = 0;\n\n  switch (state.operation) {\n    case \"+\":\n      computation = prev + current;\n      computation = parseFloat(computation.toFixed(2));\n      break;\n\n    case \"-\":\n      computation = prev - current;\n      computation = parseFloat(computation.toFixed(2));\n      break;\n    case \"*\":\n      computation = prev * current;\n      computation = parseFloat(computation.toFixed(2));\n      break;\n    case \"÷\":\n      computation = prev / current;\n      computation = parseFloat(computation.toFixed(2));\n      break;\n  }\n  return computation.toString();\n};\n\nconst INTEGER_FORMATTER = new Intl.NumberFormat(\"en-US\", {\n  minimumFractionDigits: 0,\n});\n\nconst formatOperand = (operand: any) => {\n  if (operand == null) return;\n  const [integer, decimal] = operand.split(\".\");\n\n  if (decimal == null) {\n    return INTEGER_FORMATTER.format(parseInt(integer));\n  }\n  return `${INTEGER_FORMATTER.format(parseInt(integer))}.${decimal}`;\n};\nconst INITIAL_STATE: State = {\n  currentOperand: null,\n  previousOperand: null,\n  operation: \"\",\n};\nconst CalculatorMain = () => {\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE);\n\n  return (\n    <div className=\"calculator-grid\">\n      <div className=\"output\">\n        <div className=\"previous-operand\">\n          {formatOperand(state.previousOperand)}\n          {state.operation}\n        </div>\n        <div className=\"current-operand\">\n          {formatOperand(state.currentOperand)}\n        </div>\n      </div>\n      <button\n        className=\"span-two\"\n        onClick={() => dispatch({ type: ACTIONS.CLEAR })}\n      >\n        AC\n      </button>\n      <button\n        className=\"button\"\n        onClick={() => dispatch({ type: ACTIONS.DELETE_DIGIT })}\n      >\n        DEL\n      </button>\n      <OperationButton dispatch={dispatch} operation=\"÷\"></OperationButton>\n      <DigitButton dispatch={dispatch} digit=\"1\"></DigitButton>\n      <DigitButton digit=\"2\" dispatch={dispatch}></DigitButton>\n      <DigitButton digit=\"3\" dispatch={dispatch}></DigitButton>\n      <OperationButton operation=\"*\" dispatch={dispatch}></OperationButton>\n      <DigitButton digit=\"4\" dispatch={dispatch}></DigitButton>\n      <DigitButton digit=\"5\" dispatch={dispatch}></DigitButton>\n      <DigitButton digit=\"6\" dispatch={dispatch}></DigitButton>\n      <OperationButton operation=\"+\" dispatch={dispatch}></OperationButton>\n      <DigitButton digit=\"7\" dispatch={dispatch}></DigitButton>\n      <DigitButton digit=\"8\" dispatch={dispatch}></DigitButton>\n      <DigitButton digit=\"9\" dispatch={dispatch}></DigitButton>\n      <OperationButton operation=\"-\" dispatch={dispatch}></OperationButton>\n      <DigitButton digit=\".\" dispatch={dispatch}></DigitButton>\n      <DigitButton digit=\"0\" dispatch={dispatch}></DigitButton>\n      <button\n        className=\"span-two\"\n        onClick={() => dispatch({ type: ACTIONS.EVALUATE })}\n      >\n        =\n      </button>\n    </div>\n  );\n};\n\nexport default CalculatorMain;\n",["89","90"],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/Calculator/Button/OperationButton.tsx",["91"],"import React, { ReducerAction } from \"react\";\nimport { Action, ACTIONS } from \"../CalculatorMain\";\n\nfunction OperationButton(props: {\n  dispatch: React.Dispatch<Action>;\n  operation: String;\n}) {\n  return (\n    <button\n      onClick={() =>\n        props.dispatch({\n          type: ACTIONS.CHOOSE_OPERATION,\n          payload: { operation: props.operation },\n        })\n      }\n    >\n      {props.operation}\n    </button>\n  );\n}\n\nexport default OperationButton;\n","/home/administrator/Work/React_Projects/react-tutorial/src/Components/Calculator/Button/DigitButton.tsx",[],["92","93"],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/Counter/CounterMain.tsx",[],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/header/HeaderMain.tsx",[],"/home/administrator/Work/React_Projects/react-tutorial/src/Components/Reset_form_with_default_values_and_clear_errors/ResetFormMain.tsx",["94"],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":5,"column":10,"nodeType":"101","messageId":"102","endLine":5,"endColumn":21},{"ruleId":"99","severity":1,"message":"103","line":6,"column":10,"nodeType":"101","messageId":"102","endLine":6,"endColumn":14},{"ruleId":"99","severity":1,"message":"104","line":15,"column":10,"nodeType":"101","messageId":"102","endLine":15,"endColumn":17},{"ruleId":"105","severity":1,"message":"106","line":15,"column":6,"nodeType":"107","endLine":15,"endColumn":14,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":117,"column":3,"nodeType":"111","messageId":"112","endLine":117,"endColumn":16},{"ruleId":"95","replacedBy":"113"},{"ruleId":"97","replacedBy":"114"},{"ruleId":"99","severity":1,"message":"115","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":30},{"ruleId":"95","replacedBy":"116"},{"ruleId":"97","replacedBy":"117"},{"ruleId":"105","severity":1,"message":"118","line":28,"column":6,"nodeType":"107","endLine":28,"endColumn":12,"suggestions":"119"},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"@typescript-eslint/no-unused-vars","'UserService' is defined but never used.","Identifier","unusedVar","'User' is defined but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.","ArrayExpression",["122"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode",["120"],["121"],"'ReducerAction' is defined but never used.",["120"],["121"],"React Hook useEffect has a missing dependency: 'reset'. Either include it or remove the dependency array.",["123"],"no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [fetchUser, userId]",{"range":"128","text":"129"},"Update the dependencies array to be: [reset, user]",{"range":"130","text":"131"},[441,449],"[fetchUser, userId]",[1005,1011],"[reset, user]"]